/**
 * Share Studio - Social Media Share Buttons Widget
 * Version: 1.0.0
 * Author: Dee7 Studio
 * License: MIT
 */

(function() {
    'use strict';

    // Platform configuration
    const platformConfig = {
        facebook: { 
            label: 'Facebook', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/Facebook.svg?updatedAt=1751101326689', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/Facebook_black.svg?updatedAt=1751101326631',
            shareUrl: 'https://www.facebook.com/sharer/sharer.php?u='
        },
        x: { 
            label: 'X', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/X.svg?updatedAt=1751101329412', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/X_black.svg?updatedAt=1751101329529',
            shareUrl: 'https://twitter.com/intent/tweet?url='
        },
        linkedin: { 
            label: 'LinkedIn', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/LinkedIn.svg?updatedAt=1751101326668', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/LinkedIn_Black.svg?updatedAt=1751101326659',
            shareUrl: 'https://www.linkedin.com/sharing/share-offsite/?url='
        },
        pinterest: { 
            label: 'Pinterest', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/Pinterest.svg?updatedAt=1751101326628', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/Pinterest_Black.svg?updatedAt=1751101326649',
            shareUrl: 'https://pinterest.com/pin/create/button/?url='
        },
        reddit: { 
            label: 'Reddit', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/Reddit.svg?updatedAt=1751102199116', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/Reddit_Black.svg?updatedAt=1751102199078',
            shareUrl: 'https://www.reddit.com/submit?url='
        },
        tiktok: { 
            label: 'TikTok', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/Tok%20Tok.svg?updatedAt=1751101326673', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/Tok%20Tok_Black.svg?updatedAt=1751101326653',
            shareUrl: 'https://www.tiktok.com/share?url='
        },
        instagram: { 
            label: 'Instagram', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/Instagram.svg?updatedAt=1751100484264', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/Instagram_black.svg?updatedAt=1751100510415',
            shareUrl: null // Special case
        },
        copy: { 
            label: 'Copy Link', 
            colorIcon: 'https://ik.imagekit.io/dee7studio/Icons/Copy%20Link.svg?updatedAt=1751101326655', 
            blackIcon: 'https://ik.imagekit.io/dee7studio/Icons/Copy%20Link_black.svg?updatedAt=1751101326620',
            shareUrl: null // Special case
        }
    };

    // Initialize the widget
    function initShareWidget() {
        const scripts = document.querySelectorAll('script[src*="share-buttons"]');
        
        scripts.forEach(script => {
            const config = {
                platforms: (script.dataset.platforms || 'facebook,x,linkedin').split(','),
                iconColor: script.dataset.iconColor || 'color',
                displayStyle: script.dataset.displayStyle || 'icon-text',
                buttonStyle: script.dataset.buttonStyle || 'rounded',
                size: script.dataset.size || 'medium',
                position: script.dataset.position || 'inline'
            };

            createWidget(script, config);
        });
    }

    // Create the widget
    function createWidget(scriptElement, config) {
        // Create widget container
        const widget = document.createElement('div');
        widget.className = `share-widget share-widget-${config.position} share-widget-${config.size} share-widget-${config.buttonStyle}`;
        
        // Add CSS if not already added
        if (!document.getElementById('share-widget-styles')) {
            addStyles();
        }

        // Generate buttons
        config.platforms.forEach(platformId => {
            const platformData = platformConfig[platformId];
            if (!platformData) return;

            const button = createButton(platformData, config, platformId);
            widget.appendChild(button);
        });

        // Insert widget after the script tag
        scriptElement.parentNode.insertBefore(widget, scriptElement.nextSibling);
    }

    // Create individual button
    function createButton(platformData, config, platformId) {
        const button = document.createElement('a');
        button.href = '#';
        button.className = `share-btn share-btn-${platformId}`;
        button.setAttribute('aria-label', `Share on ${platformData.label}`);
        button.dataset.platform = platformId;

        // Add display style class
        if (config.displayStyle === 'icon-only') button.classList.add('icon-only');
        if (config.displayStyle === 'text-only') button.classList.add('text-only');

        // Button content
        const iconSrc = config.iconColor === 'color' ? platformData.colorIcon : platformData.blackIcon;
        
        if (config.displayStyle === 'text-only') {
            button.textContent = platformData.label;
        } else if (config.displayStyle === 'icon-only') {
            button.innerHTML = `<img src="${iconSrc}" alt="${platformData.label}" class="share-btn-icon">`;
        } else {
            button.innerHTML = `<img src="${iconSrc}" alt="${platformData.label}" class="share-btn-icon"> ${platformData.label}`;
        }

        // Add click handler
        button.addEventListener('click', handleShare);

        return button;
    }

    // Handle share button clicks
    function handleShare(e) {
        e.preventDefault();
        
        const platform = this.dataset.platform;
        const platformData = platformConfig[platform];
        const pageInfo = getPageInfo();
        
        let shareUrl = '';
        
        switch(platform) {
            case 'facebook':
                shareUrl = platformData.shareUrl + pageInfo.url;
                break;
            case 'x':
                const twitterText = pageInfo.description ? 
                    pageInfo.title + ' - ' + decodeURIComponent(pageInfo.description).substring(0, 100) + '...' : 
                    pageInfo.title;
                shareUrl = platformData.shareUrl + pageInfo.url + '&text=' + encodeURIComponent(twitterText);
                break;
            case 'linkedin':
                shareUrl = platformData.shareUrl + pageInfo.url;
                break;
            case 'pinterest':
                const pinterestDescription = pageInfo.description || pageInfo.title;
                shareUrl = platformData.shareUrl + pageInfo.url + '&description=' + pinterestDescription;
                if (pageInfo.image) {
                    shareUrl += '&media=' + pageInfo.image;
                }
                break;
            case 'reddit':
                shareUrl = platformData.shareUrl + pageInfo.url + '&title=' + pageInfo.title;
                break;
            case 'tiktok':
                shareUrl = platformData.shareUrl + pageInfo.url + '&title=' + pageInfo.title;
                break;
            case 'instagram':
                const instagramText = decodeURIComponent(pageInfo.title) + '\n\n' + window.location.href;
                copyToClipboard(instagramText, this, 'Content copied! You can now paste it in Instagram.');
                return;
            case 'copy':
                const copyText = decodeURIComponent(pageInfo.title) + '\n' + window.location.href;
                copyToClipboard(copyText, this, 'Copied!');
                return;
        }
        
        if (shareUrl) {
            window.open(shareUrl, 'share-dialog', 'width=600,height=500,resizable=yes,scrollbars=yes');
        }
    }

    // Get page information for sharing
    function getPageInfo() {
        const currentUrl = encodeURIComponent(window.location.href);
        
        const ogTitle = document.querySelector('meta[property="og:title"]');
        const titleTag = document.querySelector('title');
        const pageTitle = encodeURIComponent(
            (ogTitle && ogTitle.content) || 
            (titleTag && titleTag.textContent) || 
            document.title || ''
        );
        
        const ogDescription = document.querySelector('meta[property="og:description"]');
        const metaDescription = document.querySelector('meta[name="description"]');
        const pageDescription = encodeURIComponent(
            (ogDescription && ogDescription.content) || 
            (metaDescription && metaDescription.content) || ''
        );
        
        const ogImage = document.querySelector('meta[property="og:image"]');
        const pageImage = ogImage && ogImage.content ? encodeURIComponent(ogImage.content) : '';
        
        return { url: currentUrl, title: pageTitle, description: pageDescription, image: pageImage };
    }

    // Copy to clipboard functionality
    function copyToClipboard(text, button, successMessage) {
        if (navigator.clipboard) {
            navigator.clipboard.writeText(text).then(() => {
                showCopyFeedback(button, successMessage);
            }).catch(() => {
                copyFallback(text, button, successMessage);
            });
        } else {
            copyFallback(text, button, successMessage);
        }
    }

    function copyFallback(text, button, successMessage) {
        const textArea = document.createElement('textarea');
        textArea.value = text;
        textArea.style.position = 'fixed';
        textArea.style.left = '-999999px';
        document.body.appendChild(textArea);
        textArea.select();
        
        try {
            document.execCommand('copy');
            showCopyFeedback(button, successMessage);
        } catch (err) {
            console.error('Copy failed:', err);
        }
        
        document.body.removeChild(textArea);
    }

    function showCopyFeedback(button, message) {
        const originalHtml = button.innerHTML;
        button.innerHTML = button.innerHTML.includes('img') ? 
            button.innerHTML.replace(/>[^<]*$/, '>' + message) : message;
        setTimeout(() => {
            button.innerHTML = originalHtml;
        }, 2000);
    }

    // Add CSS styles
    function addStyles() {
        const style = document.createElement('style');
        style.id = 'share-widget-styles';
        style.textContent = `
.share-widget {
    display: flex;
    gap: 0.75rem;
    justify-content: center;
    flex-wrap: wrap;
    align-items: center;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.share-widget-floating-left,
.share-widget-floating-right {
    position: fixed;
    top: 50%;
    transform: translateY(-50%);
    flex-direction: column;
    gap: 0.5rem;
    padding: 0.75rem;
    background: #ffffff;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    z-index: 1000;
}

.share-widget-floating-left { left: 20px; }
.share-widget-floating-right { right: 20px; }

.share-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
    cursor: pointer;
    background: #ffffff;
    color: #1a1a1a;
    border: 1px solid #e5e7eb;
    white-space: nowrap;
}

.share-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.share-widget-small .share-btn { padding: 0.5rem 1rem; font-size: 12px; }
.share-widget-medium .share-btn { padding: 0.75rem 1rem; font-size: 14px; }
.share-widget-large .share-btn { padding: 1rem 1.5rem; font-size: 16px; }

.share-widget-small .share-btn.icon-only { padding: 0.5rem; }
.share-widget-medium .share-btn.icon-only { padding: 0.75rem; }
.share-widget-large .share-btn.icon-only { padding: 1rem; }

.share-widget-rounded .share-btn { border-radius: 8px; }
.share-widget-square .share-btn { border-radius: 4px; }
.share-widget-circle .share-btn { border-radius: 999px; }
.share-widget-circle .share-btn.icon-only { border-radius: 50%; }

.share-btn.text-only {
    background: transparent;
    border: none;
    padding: 0.5rem;
    color: #6b7280;
}

.share-btn.text-only:hover {
    color: #1a1a1a;
    background: transparent;
    transform: none;
    box-shadow: none;
}

.share-btn-icon {
    flex-shrink: 0;
}

.share-widget-small .share-btn-icon { width: 16px; height: 16px; }
.share-widget-medium .share-btn-icon { width: 20px; height: 20px; }
.share-widget-large .share-btn-icon { width: 24px; height: 24px; }

@media (max-width: 768px) {
    .share-widget-floating-left { left: 10px; }
    .share-widget-floating-right { right: 10px; }
    .share-widget { gap: 0.5rem; }
}`;
        
        document.head.appendChild(style);
    }

    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initShareWidget);
    } else {
        initShareWidget();
    }
})();
